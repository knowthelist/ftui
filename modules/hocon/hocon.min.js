export function parseHocon(text,ignoreDots=!1){function hoconException(e){this.name="parseHoconException",this.message=e,this.toString=function(){return this.name+": "+this.message}}function readHocon(e){function n(e){return-1!==['"',"\\"].indexOf(e)}function t(e=m,n=x){if(!s&&!o&&!ignoreDots){const i=e.indexOf(".");if(i>0){const o=e.substring(0,i);return n[o]=n[o]||{},void t(e.substring(i+1),n[o])}}i||"string"!=typeof h||(h=h.trim(),/^\d+$/.test(h)?h=parseInt(h):/^\d+\.\d+$/.test(h)?h=parseFloat(h):"true"===h?h=!0:"false"===h?h=!1:"null"===h&&(h=null)),s?n.push(h):("object"==typeof n[e]&&"object"==typeof h?extend(n[e],h):n[e]=h,o=!1,u=!1),f=!1,m="",h=""}let i=!1,o=!1,r="",c=!1,a=!1,s=!1,u=!1,f=!1,d=!1,l=!1,b=!1,m="",h="",x={};for(;index<e.length;){const p=e[index];if(index++,!d||b)if(!c&&'"'===p&&index+1<e.length&&'"'===e[index]&&'"'===e[index+1]){if(b){t(),b=!1,i=!1,u=!1,index+=2;continue}b=!0,i=!0,u=!0,index+=2}else if(c||b||'"'!==p)if(b&&n(p))h+=p;else if(i&&"\\"===p)c=!0;else{if(c=!1,!i)switch(p){case" ":if(""!==m&&!u){m+=p;continue}if(""===h)continue;if(s&&u){h+=p;continue}break;case"\t":case"\r":case"\n":if(s&&u){if(""===h)continue;t();continue}if(!m)continue;if(!u){u=!0;continue}if(u&&h){t();continue}continue;case"{":if(a||s||m){index--,m=m.trim(),h=readHocon(e),t();continue}a=!0;continue;case"}":if(!a)throw new hoconException("closing curl unexpected");if(h)t();else if(m)return m;return x;case":":case"=":if(f)throw new hoconException("Already met seperator");u=!0,f=!0,m=m.trim();continue;case",":u&&h&&t();continue;case"[":if(a||s||m){index--,h=readHocon(e),t();continue}u=!0,s=!0,x=[];continue;case"]":if(!s)throw new hoconException("not in an array");return h&&(h=h.trim(),t()),x;case"$":if(!h){h="${"+readHocon(e)+"}",t();continue}break;case"#":d=!0;continue;case"/":if(l){d=!0,l=!1;continue}l=!0;continue}u?h+=p:m+=p}else{if(i&&r===p){u?t():(o=!0,u=!0),i=!1;continue}i=!0,r=p}else"\r"!==p&&"\n"!==p||(d=!1)}if(a)throw new hoconException("Expected closing curly bracket");if(s)throw new hoconException("Expected closing square bracket");return u&&t(),x}function handleSubtitutions(mainObj,intermidiateObj,loops){if(loops=loops||0,loops>8)return null;if(intermidiateObj=void 0===intermidiateObj?mainObj:intermidiateObj,null==intermidiateObj)return intermidiateObj;if(Array.isArray(intermidiateObj))intermidiateObj.forEach(function(e,n){intermidiateObj[n]=handleSubtitutions(mainObj,e)});else if("string"==typeof intermidiateObj){const match=/^\$\{(.+?)\}$/.exec(intermidiateObj);if(match&&2==match.length){const val=eval("mainObj."+match[1]);return void 0===val?null:handleSubtitutions(mainObj,val,loops+1)}}else"object"==typeof intermidiateObj&&Object.keys(intermidiateObj).forEach(function(e){intermidiateObj[e]=handleSubtitutions(mainObj,intermidiateObj[e])});return intermidiateObj}function extend(){for(let e=1;e<arguments.length;e++)for(const n in arguments[e])arguments[e].hasOwnProperty(n)&&("object"==typeof arguments[0][n]&&"object"==typeof arguments[e][n]?extend(arguments[0][n],arguments[e][n]):arguments[0][n]=arguments[e][n]);return arguments[0]}let index=0;if(!text)return null;const result=readHocon(text);return handleSubtitutions(result)}